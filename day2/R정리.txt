#### 2. 컬럼명 정리 ####
# names(df) 작업해서 인덱싱번호에다가 컬럼명 변경
# names(df) = c(' ',' '), ....

names(df)[1] = '카메라Num'
names(df)[25] = '제한속도factor'
names(df)

# names(df)[1] = names(df)[1]+'bu' 
# R은 문자열 연결을 +로 못 함

help(paste)
paste('e','k', sep='')
names(df)[1] = paste(names(df)[1], '-bu', sep='')
str(df)

#### 3. 필요한 컬럼만 모아서 별도의 데이터셋 제작 ####
# 첫번째, 불필요한 컬럼을 제거함으로서 수행속도를 높임
# 두번째, 분석하고자 하는 내용에 맞게끔 새로운 데이터프레임 구성

names(df)

df1 = df[,c(2,3,4,7,11,13,14,16)]
str(df1)
# 위경도로 지도를 그리고 싶다면
df2 = df[,c(10,11,13,14)]


#### 4. 조건에 맞는 자료만 필터링 ####
# subset 사용

str(df1)
# 미션, 단속구분을 unique하게 받아보기
unique(df1$단속구분)

# subset을 이용하여서 단속구분이 1인 자료만 필터링 해보세요.
subset(df1, 단속구분=='1')
head(subset(df1, 단속구분=='1'))

# subset을 이용하여서 제한속도가 50인 자료만 필터링 해보세요.
subset(df1, 제한속도 == '50')
head(subset(df1, 제한속도 == 50))

# subset을 이용하여서 단속구분이 1 제외하고 필터링
# != 사용
head(subset(df1, 단속구분 != '1'))

# subset을 이용하여서 단속구분이 1이면서 (&) 시도명이 '경기도'인 자료
head(subset(df1, 단속구분 == '1' & 시도명 == '경기도'))

시도.경기도 = subset(df1, 시도명=='경기도')
table(df1$시도명)

#### 5. 자료셋을 새로 제작해서 csv로 저장하기 ####

unique(df1$시도명)

부산 = subset(df1, 시도명 == '부산광역시')
unique(부산)
sido = unique(df1$시도명)
index = 1
tmp = subset(df1, 시도명 == sido[index])
head(tmp)

head(rownames(tmp))

help(write.csv)
fileName = paste(sido[index], 'csv', sep='')
write.csv(tmp, fileName)

length(sido)

for (index in 1:21) {
tmp = subset(df1, 시도명 == sido[index])
fileName = paste('./저장/', sido[index], '.csv', sep='')
write.csv(tmp, fileName)}


# ----------------------------------------------

#### 폴더명 제작 ####
# 내가 폴더명을 하나하나 지정할 수 없을 때

names(df1)
colbunho=2
folderName = paste('./저장/',names(df)[colbunho],sep='')
dir.create(folderName)

tmp = names(df1)
index = 1
findCol = tmp[index]
폴더명 = paste('./저장/', findCol, sep='')
dir.create(폴더명)

# tmp = unique(df1$findCol)
# tmp = unique(df1[,index])
for (index2 in 1:leng)


#### R 메모리 변수 모두 제거 ####
# rm(list=ls())

rm(list=ls())
ls()
df

#### 데이터 로드 ####
df = read.csv(dir()[7], stringsAsFactors=TRUE)
head(df)
str(df)

df1 = df[,c(1:9)]
str(df1)
summary(df1)

# df1자료를 작업자료.csv로 저장
write.csv(df1, '작업자료.csv')
dir()

rm(list=ls())

df = read.csv('작업자료.csv', stringsAsFactors=TRUE)
str(df)

#### 기술통계 ####
summary(df)
df = df[,-1]
str(df)
summary(df, 1)
names(df)[2] ; class(names(df)[2])
str(names(df)[2])
summary(data.frame(df[,2]))
data.frame(summary(df[,2]))
data.frame(빈도수=summary(df[,2]))
# data.frame(val=summary(df[,7]))
# 모두 다 되는 건 아님
# NA값 확인하고 지우기
summary(df) 
sum(is.na(df[,1]))   # 1번컬럼 결측치 : 0
sum(is.na(df[,2]))   # 0
sum(is.na(df[,3]))   # 0
sum(is.na(df[,4]))   # 0
sum(is.na(df[,5]))   # 0
sum(is.na(df[,6]))   # 0
sum(is.na(df))       # 전체 결측치 : 930

# --> 어떤 컬럼이 결측치를 가졌는지 모르겠음

sum(is.na(df)
colName = names(df)
cnt = length(colName)

# for문으로 돌리기
for (i in 1:cnt) {
	print(colName[1])
	print(sum(is.na(df[,i])))
}

# 결측치 패키지
install.packages('naniar')
library(naniar)                                #naniar 패키지를 불러옵니다.
naniar::miss_case_summary(df)          # case : 행 기준
naniar::miss_var_summary(df)            # variable : 변수 기준
naniar::vis_miss(df)
naniar::gg_miss_var(df)
naniar::gg_miss_var(df, show_pct = TRUE)
naniar::gg_miss_upset(df)

install.packages('VIM')
library(VIM)
VIM::aggr(df)

# 기본으로 하는 것 
install.packages('Amelia')
library(Amelia)
missmap(df)

savePlot("무인카메라결측치", type="png")